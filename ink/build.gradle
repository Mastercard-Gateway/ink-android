apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'

android {
    compileSdkVersion 27


    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 27
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        abortOnError false
    }

    buildTypes {
        release
    }
}

task androidJavadocs(type: Javadoc) {
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    android.libraryVariants.all { variant ->
        if (variant.name == 'release') {
            owner.classpath += variant.javaCompile.classpath
        }
    }
    source = android.sourceSets.main.java.srcDirs
    exclude '**/R.html', '**/R.*.html', '**/index.html'
}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    classifier = 'javadoc'
    from androidJavadocs.destinationDir
}

task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

publishing {
    publications {
        aar(MavenPublication) {
            groupId = GROUP_ID
            artifactId ARTIFACT_ID
            version = VERSION_NAME


            artifact androidJavadocsJar
            artifact androidSourcesJar

            pom.withXml {
                def root = asNode()

                // adds basic info
                root.appendNode('name', PROJECT_NAME)
                root.appendNode('description', PROJECT_DESCRIPTION)
                root.appendNode('url', PROJECT_URL)

                // adds license info
                def license = root.appendNode('licenses').appendNode('license')
                license.appendNode('name', LICENSE_NAME)
                license.appendNode('url', LICENSE_URL)
                license.appendNode('distribution', 'repo')

                // adds source control info
                def scm = root.appendNode('scm')
                scm.appendNode('url', PROJECT_URL)
                scm.appendNode('connection', VCS_URL)

                // adds developer info
                def developers = root.appendNode('developers')
                def dev = developers.appendNode('developer')
                dev.appendNode('id', DEV1_ID)
                dev.appendNode('name', DEV1_NAME)
            }
        }
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_API_KEY')
    publications = ['aar']
    publish = true
    pkg {
        repo = BINTRAY_REPO
        name = BINTRAY_NAME
        userOrg = BINTRAY_USER_ORG
        licenses = [BINTRAY_LICENSE]
        vcsUrl = VCS_URL
        version {
            name = VERSION_NAME
        }
    }
}